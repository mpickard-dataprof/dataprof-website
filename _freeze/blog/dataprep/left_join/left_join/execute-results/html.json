{
  "hash": "09ec6754377a4db1d43826e1c2161afa",
  "result": {
    "markdown": "---\ntitle: \"Left Join\"\nformat: html\n---\n\n\n\n\n\n## What is a left join?\nA left join keeps all the rows from the left table and inserts NULLs on the right when there is not a matching row found in the right table.\n\nThis Venn diagram illustrates which rows are included in a left join.\n\n![](left_join_venn.svg){height=250 fig-align=\"center\"}\n\n:::{.callout-note}\nA left join is the mirror of a right join.\n:::\n\n## How does a left join work?\nA left join visits every row in the left table and then checks if there is a matching row in the right table. If there is, it combines the matching left and right row.  If there is not, it places nulls on the right side.\n\n::: {layout=\"[[32,68], [100]]\"}\n![Left Table](left_join_left_table.svg)\n\n![Right Table](left_join_right_table.svg)\n\n![Left Joined Result](left_join_results.svg)\n:::\n\nNotice how the last row (`id=-5`, `name=\"Rowlf the Dog\"`) in the left table does not have a match in the right table. So, nulls are inserted into the right columns of the result.\n\n[The Data School](https://dataschool.com/how-to-teach-people-sql/left-right-join-animated/) provides [a nice animation](https://dataschool.com/assets/images/how-to-teach-people-sql/leftJoin/leftJoin_1.gif) of the row by row operations for a left join.\n\n## How many records end up in the result of an inner join?\n\n$L =$ # of records in the left table\n\n$R =$ # of records in the right table\n\nThe number of records in the final left join is $L$. \n\n\n## Implementing a left join in different tools\nHere is how you perform a left join in [R](#r), [Python](#python), [Power BI](#power-bi), and [Excel](#excel).\n\n### R \n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n\nemployees %>% \n  left_join(positions, by = \"muppet_id\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 Ã— 4\n  muppet_id names           role             wage_per_hour\n      <dbl> <chr>           <chr>                    <dbl>\n1         1 Kermit the Frog pragmatic leader          75  \n2         2 Miss Piggy      diva pig                  85  \n3         3 Fozzie the Bear stand-up comic            25.2\n4         4 Gonzo           stunt performer           54.5\n5         5 Rowlf the Dog   <NA>                      NA  \n```\n:::\n:::\n\n\n### Python\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nimport pandas as pd\n\npd.merge(employees, positions, how='left')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   muppet_id            names              role  wage_per_hour\n0        1.0  Kermit the Frog  pragmatic leader          75.00\n1        2.0       Miss Piggy          diva pig          85.00\n2        3.0  Fozzie the Bear    stand-up comic          25.25\n3        4.0            Gonzo   stunt performer          54.50\n4        5.0    Rowlf the Dog               NaN            NaN\n```\n:::\n:::\n\n\n### Power BI\nIn Power BI, we invoke Power Query through the Home >> Transform data menu item.\n\n{{< video https://youtu.be/c0X8nrNhwZQ >}}\n\n\n\n### Excel\nIn native Excel, there is not a true left join.  We can use `VLOOKUP()` repeatedly to \"join\" multiples columns in a \"left join\" manner. \n\n{{< video https://youtu.be/m7jESAEYmXw >}}\n\n\n\n:::{.callout-note}\nLike with Power BI, Power Query is also embedded in Excel. We could also use it in Excel (through the Data >> Get Data menu item).\n:::",
    "supporting": [
      "left_join_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}